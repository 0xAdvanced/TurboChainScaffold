/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Counter, CounterInterface } from "../../contracts/Counter";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newCount",
        type: "uint256",
      },
    ],
    name: "CountUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decrement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "increment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_count",
        type: "uint256",
      },
    ],
    name: "setCount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50600180546001600160a01b0319163317905561035a806100326000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806306661abd146100675780632baeceb7146100835780638da5cb5b1461008d578063d09de08a146100b8578063d14e62b8146100c0578063d826f88f146100d3575b600080fd5b61007060005481565b6040519081526020015b60405180910390f35b61008b6100db565b005b6001546100a0906001600160a01b031681565b6040516001600160a01b03909116815260200161007a565b61008b61018f565b61008b6100ce3660046102c9565b6101a1565b61008b610238565b600080541161013d5760405162461bcd60e51b8152602060048201526024808201527f436f756e7465723a2063616e6e6f742064656372656d656e742062656c6f77206044820152637a65726f60e01b60648201526084015b60405180910390fd5b600160008082825461014f91906102f8565b909155505060005460405190815233907f170de63abeb5e32b35c3def75defe334590e5fdcf704dba0c988ab49e6e4cec0906020015b60405180910390a2565b600160008082825461014f9190610311565b6001546001600160a01b031633146101fb5760405162461bcd60e51b815260206004820181905260248201527f436f756e7465723a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610134565b600081905560405181815233907f170de63abeb5e32b35c3def75defe334590e5fdcf704dba0c988ab49e6e4cec09060200160405180910390a250565b6001546001600160a01b031633146102925760405162461bcd60e51b815260206004820181905260248201527f436f756e7465723a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610134565b600080805560405190815233907f170de63abeb5e32b35c3def75defe334590e5fdcf704dba0c988ab49e6e4cec090602001610185565b6000602082840312156102db57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561030b5761030b6102e2565b92915050565b8082018082111561030b5761030b6102e256fea26469706673582212207fb1fa817015de030c8932f353ae108b14592c0a9fdf5ee7797bb86f0133915164736f6c63430008140033";

type CounterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CounterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Counter__factory extends ContractFactory {
  constructor(...args: CounterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Counter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Counter__factory {
    return super.connect(runner) as Counter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CounterInterface {
    return new Interface(_abi) as CounterInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Counter {
    return new Contract(address, _abi, runner) as unknown as Counter;
  }
}
